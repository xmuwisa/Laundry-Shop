package gui;
import session.SessionManager;
import database.DatabaseUtils;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Luisa Eustaquio
 */
public class AdminPanel extends javax.swing.JFrame {
    String selectedSort = "All";
    /**
     * Creates new form AdminPanel
     */
    public AdminPanel() {
        initComponents();
        this.setLocationRelativeTo(null);
        displayLoggedInUser();
        displayTransactions(selectedSort);
        
        tblTransactions.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    System.out.println("Selecting row");
                    int selectedRow = tblTransactions.getSelectedRow();
                    if (selectedRow != -1) {
                        int transactionID = (int) tblTransactions.getValueAt(selectedRow, 0);
                        String transactionStatus = (String) tblTransactions.getValueAt(selectedRow, 7);
                        displayDetails(transactionID, transactionStatus);
                    }
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbSort = new javax.swing.JComboBox<>();
        lblUsername = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransactions = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cbSort.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        cbSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Pending", "Approved", "Request Cancel", "Cancelled", "Completed" }));
        cbSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSortActionPerformed(evt);
            }
        });
        getContentPane().add(cbSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 120, 210, -1));

        lblUsername.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblUsername.setText("USERNAME");
        lblUsername.setToolTipText("");
        getContentPane().add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 128, 20));

        btnLogout.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        getContentPane().add(btnLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 3, 48)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Admin Panel");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 800, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        tblTransactions.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblTransactions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Transaction ID", "User ID", "Point Person", "Delivery Method", "Drop Off Date", "Completed Date", "Submitted Date", "Transaction Status", "Payment Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTransactions);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 780, 430));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dbts2.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String loggedInUsername;
    
    private void displayDetails(int transactionID, String transactionStatus) {
        TransactionDetailsPanel transactionDetailsPanel = new TransactionDetailsPanel(transactionID, transactionStatus);
        transactionDetailsPanel.setVisible(true);
        this.dispose();
    }

    private void displayTransactions(String selectedSort) {
        DefaultTableModel model = (DefaultTableModel) tblTransactions.getModel();
        model.setRowCount(0);

        try (Connection conn = DatabaseUtils.getConnection();
            PreparedStatement stmt = conn.prepareStatement("SELECT t.t_id, t.c_id, u.u_id, c.c_name, t.t_deliveryMethod, t.t_dropOffDate, t.t_completedDate, t.t_submittedDate, t.t_transacStatus, t.t_paymentStatus "
                                                    + "FROM tbl_transactions t "
                                                    + "INNER JOIN tbl_customers c ON t.c_id = c.c_id "
                                                    + "INNER JOIN tbl_users u ON c.u_id = u.u_id "
                                                    + "WHERE " + getWhereClause(selectedSort))) {
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                int transactionID = rs.getInt("t_id");
                int userID = rs.getInt("u_id");
                String pointPerson = rs.getString("c_name");
                String deliveryMethod = rs.getString("t_deliveryMethod");
                String dropOffDate = rs.getString("t_dropOffDate");
                String submittedDate = rs.getString("t_submittedDate");
                String completedDate = rs.getString("t_completedDate");
                String transactionStatus = rs.getString("t_transacStatus");
                String paymentStatus = rs.getString("t_paymentStatus");
                
                if (completedDate == null){
                    completedDate = "Not yet completed.";
                } else {
                    completedDate = rs.getString("t_completedDate");
                }

                model.addRow(new Object[]{transactionID, userID, pointPerson, deliveryMethod, dropOffDate, completedDate, submittedDate, transactionStatus, paymentStatus});
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        SessionManager.clearLoggedInUser();
        MainPanel mainPanel = new MainPanel();
        mainPanel.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void cbSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSortActionPerformed
        selectedSort = (String) cbSort.getSelectedItem();
        displayTransactions(selectedSort);
    }//GEN-LAST:event_cbSortActionPerformed

    private String getWhereClause(String selectedSort) {
        switch(selectedSort) {
            case "All":
                return "(t.t_transacStatus IN ('pending', 'request cancel', 'cancelled', 'approved') OR t.t_completedDate IS NOT NULL)";
            case "Pending":
                return "t.t_transacStatus = 'pending'";
            case "Approved":
                return "t.t_transacStatus = 'approved'";
            case "Request Cancel":
                return "t.t_transacStatus = 'request cancel'";
            case "Cancelled":
                return "t.t_transacStatus = 'cancelled'";
            case "Completed":
                return "t.t_completedDate IS NOT NULL";
            default:
                return "";
        }
    }
    
    private void displayLoggedInUser() {
        loggedInUsername = SessionManager.getLoggedInUser();
        if (loggedInUsername != null) {
            lblUsername.setText("Logged in as: " + loggedInUsername);
        } else {
            lblUsername.setText("No user logged in");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogout;
    private javax.swing.JComboBox<String> cbSort;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTable tblTransactions;
    // End of variables declaration//GEN-END:variables
}
